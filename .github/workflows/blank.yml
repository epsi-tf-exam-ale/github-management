# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on pull request events but only for the main branch
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Install terraform
        uses: hashicorp/setup-terraform@v1
        with:
           terraform_version: 0.14.7
      
      - name: Terraform init
        id: init
        run: terraform init
        env:
           TF_VAR_GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
           TF_VAR_GIT_ORG : ${{ secrets.GIT_ORG  }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt
        
      - name: Terraform validate
        id: validate
        run: terraform validate
      
      - name: Terraform plan
        id: plan
        run: terraform plan -no-color
        env:
           TF_VAR_GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
           TF_VAR_GIT_ORG : ${{ secrets.GIT_ORG  }}
           
           
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
